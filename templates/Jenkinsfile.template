#!groovy
pipeline {
  properties([
    parameters([
      string(name: 'url', trim: true, description: 'URL of the public instance repository to mirror'),
      string(name: 'name', trim: true, description: 'Name of the repository to mirror'),
    ])
  ])

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
  }

  environment {
    HOME = "${env.WORKSPACE}"
  }

  stages {
    stage('Validate core version') {
      steps {
        withCredentials([
                usernamePassword(credentialsId: 'scmCredentials', usernameVariable: 'SCM_USERNAME', passwordVariable: 'SCM_PASSWORD')
        ]) {
          def mirrorConfig = JsonOutput.toJson(
                  [
                          ignoreLfs                   : false,
                          overwriteGlobalConfiguration: true,
                          proxyConfiguration          : [
                                  overwriteGlobalConfiguration: false
                          ],
                          url                         : "https://{{fqdn}}/scm/${params.respository}",
                          usernamePasswordCredential  : [
                                  enabled : true,
                                  username: SCM_USERNAME,
                                  password: SCM_PASSWORD
                          ],
                          synchronizationPeriod       : "1",
                          fastForwardOnly             : true,
                          branchesAndTagsPatterns     : "staging",
                          gpgVerificationType         : "SCM_USER_SIGNATURE",
                          type                        : "git",
                          name                        : params.name,
                          namespace                   : "incoming",
                          contextEntries              : []
                  ]
          )

          // Mirror vom Repo in der Public Instanz erstellen
          sh "curl -u {{}} {{}}  -H '${mirrorConfig}' 'Content-Type: application/json'"

          // FÃ¼r diesen Mirror ein Job in der Jenkins Instanz erstellen

          script {
            sh 'ls'
          }
        }
      }
    }
  }
}
